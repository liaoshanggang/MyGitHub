<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 名字空间,mybatis高版本后namespace属性是必须的，其作用用来区分每个SQL映射文件中的语句,
也就说在一个项目里可能会在不同的SQL 映射文件中存在相同的语句ID -->
<mapper namespace="com.lanqiao.mapper.HouseMapper">

	<resultMap id="baseResultMap" type="house" >
		<id property="id" column="ID" />
		<result property="userId" column="USER_ID"/>
		<result property="streetId" column="STREET_ID"/>
		<result property="typeId" column="TYPE_ID"/>
		<result property="room" column="ROOM"/>
		<result property="hall" column="HALL"/>
		<result property="title" column="TITLE"/>
		<result property="description" column="DESCRIPTION"/>
		<result property="price" column="PRICE"/>
		<result property="pubdate" column="PUBDATE"/>
		<result property="telephone" column="TELEPHONE"/>
		<result property="contact" column="CONTACT"/>
		<!-- 关联用户实体 -->
		<association property="userInfo" javaType="userInfo" column="USER_ID" columnPrefix="U_"
			resultMap="com.lanqiao.mapper.UserMapper.baseResultMap">
		</association>
		<association property="street" javaType="street" column="STREET_ID">
			<id property="id" column="S_ID"/>
			<result property="name" column="S_name"/>
			<association property="district" javaType="district" column="DISTRICT_ID" columnPrefix="D_">
				<id property="id" column="ID" ></id>
				<result property="name" column="name"/>
			</association>
		</association>
		<association property="types" javaType="types" column="TYPE_ID" columnPrefix="T_">
			<id property="id" column="ID" ></id>
			<result property="name" column="name"/>
		</association>
	</resultMap>
	
	<sql id="where_selective">
		<where>
			<if test="queryObject.title !=null and queryObject.title.trim().length>0">
				<bind name="pattern" value="'%'+ queryObject.title+'%'"/>
				and title like #{pattern}
			</if>
			<if test="queryObject.streetId !=null">
				and STREET_ID=#{queryObject.streetId}
			</if>
			<if test="queryObject.lowPrice !=null">
				and PRICE>=#{queryObject.lowPrice}
			</if>
			<if test="queryObject.hiPrice !=null">
				<![CDATA[and PRICE<=#{queryObject.hiPrice}]]>
			</if>
		</where>
	</sql>
	
	<!-- 根据房屋搜索信息查找房屋信息 -->
	<select id="selectSelective" parameterType="page" resultMap="baseResultMap" >
	select * from (
		select a.*,rownum rn from (
			select * from HOUSE <include refid="where_selective"/> ORDER BY PUBDATE DESC
		) a where <![CDATA[rownum<=#{lastIndex}]]> 
	) where rn>=#{firstIndex}
	</select>
	
	<!-- 根据房屋搜索信息查找房屋信息记录数 -->
	<select id="countForSelective" parameterType="page" resultType="int" >
		select count(id) from House <include refid="where_selective"/> 
	</select>
	
	<!-- 查找区信息 -->
	<select id="selectDistrict" resultType="district">
		select * from DISTRICT
	</select>
	
	<!-- 根据区号id查找街道信息 -->
	<select id="selectStreetById" parameterType="int" resultType="street" >
		select * from STREET where DISTRICT_ID=#{id}
	</select>
	
	<!-- 根据房子编号查询用户的信息 -->
	<select id="selectByPrimaryKey" parameterType="int" resultMap="baseResultMap">
		select h.*,
			   U.USER_ID 	U_USER_ID,
			   U.USER_NAME 	U_USER_NAME,
			   U.PASSWORD 	U_PASSWORD,
			   U.TEL 		U_TEL,
			   U.EMAIL 		U_EMAIL,
			   S.ID			S_ID,
			   S.NAME		S_NAME,
			   S.DISTRICT_ID,
			   D.ID			D_ID,
			   D.NAME		D_NAME,
			   T.ID			T_ID,
			   T.NAME		T_NAME
		from HOUSE h, 
			USERSINFO u,
			STREET S,
			DISTRICT D,
			TYPES T
		where h.id=#{id}
		   AND H.USER_ID=U.USER_ID
		   AND H.STREET_ID=S.ID
		   AND S.DISTRICT_ID=D.ID
		   AND H.TYPE_ID=T.ID
	</select>
	
	<!-- 查询用户发布的租房信息 -->
	<select id="selectForMe" parameterType="int" resultMap="baseResultMap">
		select * from HOUSE WHERE USER_ID=#{id}
	</select>
	
	<!-- 修改我发布的租房信息 -->
	<update id="updateMyHouseInfo" parameterType="house">
		update house
		<trim prefix="SET" suffixOverrides=",">
			<if test="streetId != null">STREET_ID=#{streetId},</if>
			<if test="typeId != null">TYPE_ID=#{typeId},</if>
			<if test="room != null">ROOM=#{room},</if>
			<if test="hall != null">HALL=#{hall},</if>
			<if test="title != null">TITLE=#{title},</if>
			<if test="description != null">DESCRIPTION=#{description},</if>
			<if test="price != null">PRICE=#{price},</if>
			<if test="pubdate != null">PUBDATE=#{pubdate},</if>
			<if test="telephone != null">TELEPHONE=#{telephone},</if>
			<if test="contact != null">CONTACT=#{contact},</if>
		</trim>
		where USER_ID=#{userId}
	</update>
	
	<!-- 根据房子id删除信息 -->
	<delete id="deleteHouseInfoById" parameterType="int">
		delete house where id=#{id}
	</delete>
	
	<!-- 插入用户发布的租房信息 -->
	<sql id="insert_columns">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="streetId != null">#{streetId},</if>
			<if test="typeId != null">#{typeId},</if>
			<if test="room != null">#{room},</if>
			<if test="hall != null">#{hall},</if>
			<if test="title != null">#{title},</if>
			<if test="description != null">#{description},</if>
			<if test="price != null">#{price},</if>
			<if test="pubdate != null">#{pubdate},</if>
			<if test="telephone != null">#{telephone},</if>
			<if test="contact != null">#{contact},</if>
		</trim>
	</sql>
	
	<sql id="insert_values">
		<trim prefix="values(" suffix=")" suffixOverrides=",">
		<if test="id != null">#{id},</if>
			<if test="streetId != null">#{streetId},</if>
			<if test="typeId != null">#{typeId},</if>
			<if test="room != null">#{room},</if>
			<if test="hall != null">#{hall},</if>
			<if test="title != null">#{title},</if>
			<if test="description != null">#{description},</if>
			<if test="price != null">#{price},</if>
			<if test="pubdate != null">#{pubdate},</if>
			<if test="telephone != null">#{telephone},</if>
			<if test="contact != null">#{contact},</if>
		</trim>
	</sql>
	<insert id="insertHouseInfo" parameterType="house">
		<!-- 从序列中得到一个值并赋给userInfo对象的userId属性
			order="BEFORE|AFTER"：表示数据库的主键值的生成机制是预生成还后生成主键
			预生成主键值：就是指在插入数据时先得有主键值，才可填其它字段的值。如：oracle
			后生成主键值：就是指在插入数据时可以先可填其它字段的值，最后现给主键值。如:ms sqlserver, mysql
		 -->
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select HOUSE_SEQ.NEXTVAL from dual
		</selectKey>
		insert into HOUSE values(#{id},#{userId},#{streetId},#{typeId},#{room},#{hall},#{title},#{description},#{price},#{pubdate},#{telephone},#{contact})
		<!-- insert into USERSINFO <include refid="insert_columns"/> <include refid="insert_values"/> -->
	</insert>
</mapper>